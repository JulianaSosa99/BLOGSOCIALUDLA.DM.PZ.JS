@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model WebSocialUdla.Models.ViewModels.BlogDetallesViewModel

@{
	ViewData["Title"] = Model.TituloPagina;
}

<div class=" container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">

			@if (Model != null)
			{
				<h1 class="mb-3">@Model.Encabezado</h1>

				<div class="d-flex justify-content-between mb-3">
					<span class="text-secondary">@Model.Autor</span>
					<span class="text-secondary">@Model.FechaPublicacion.ToLongDateString()</span>

				</div>

				<div class="mb-3">
					@if (signInManager.IsSignedIn(User))
					{
						if (Model.Liked)
						{
							<a style="cursor: pointer;">
								<i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="btnLike" style="cursor: pointer;">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}
						
					}

					<span id="totalLikes">@Model.TotalLikes</span> Likes
				</div>


				<div class="mb-3 d-flex">
					@foreach (var tag in Model.Tags)
					{
						<span class="badge bg-secondary me-1">@tag.Nombre</span>
					}
				</div>

				<img src="@Model.UrlImagenDestacada" class="d-block img-fluid mb-3" />

				<div class="mb-3 blog-details-content">
					@Html.Raw(Model.Contenido)
				</div>

				<div class="card">
					<div class="card-header">
						<h5>Comentarios</h5>
						@if (signInManager.IsSignedIn(User))
						{
							<form method="post">
								<div class="mb-3">
									<label class="form-label">Descripción Comentario</label>
									<input type="text" class="form-control" asp-for="DescripcionComentario" />
								</div>
								<div class="mb-3">
									<button type="submit" class="btn btn-dark">Enviar</button>
									<input type="hidden" asp-for="Id" />
									<input type="hidden" asp-for="ManejadorUrl" />

								</div>

							</form>
						}
					</div>
					<div class="card-body">
						@if (Model.Comentarios != null && Model.Comentarios.Any())
						{
							@foreach(var comment in Model.Comentarios)
							{
								<div class="card mb-3">
									<div class="card-body">
										<div>
											@comment.Descripcion
										</div>
										<div class="d-flex justify-content-between">
											<span class="text-secondary">@comment.Usuario</span>
											<span class="text-secondary">@comment.FechaAgregado.ToShortDateString()</span>
										</div>
									</div>
								</div>
							}
							
						}
					</div>
				</div>

				
			}
			else
			{
				<p>No se encontró el Post!</p>
			}

		</div>
	</div>
</div>


@section Scripts {
	<script>
		const btnLikeElement = document.getElementById('btnLike');
		const totalLikeElement = document.getElementById('totalLikes');
		async function getTotalLikes() { 
			fetch('/api/blogpostlike/@Model.Id/totalLikes', {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				}

			})
				.then(data => data.json())
				.then(result => totalLikeElement.innerHTML = result);
		}


		async function addLikeForBlog() 
		{
			fetch('/api/BlogPostLike/Add', {
				method: 'POST',
				headers: {
					'Content-Type':'application/json',
					'Accept': '*/*'
				},
				body: JSON.stringify({
					blogPostId: '@Model.Id', 
					userId:'@userManager.GetUserId(User)'
				})
			}).then(() => {
				btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
				btnLikeElement.removeEventListener('click', addLikeForBlog);
				getTotalLikes();

			});

		
		}



		btnLikeElement.addEventListener('click', addLikeForBlog);

	</script>
}
